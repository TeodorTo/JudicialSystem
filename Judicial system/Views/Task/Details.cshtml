@model Judicial_system.Data.Task
@{
    ViewData["Title"] = "Task Details";
    var isAdmin = User.IsInRole("Admin");
}

<div class="card">
    <div class="card-header bg-info text-white">
        <h1 class="h4 mb-0">@Model.Title</h1>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">Description:</dt>
            <dd class="col-sm-9">@Model.Description</dd>

            <dt class="col-sm-3">Unit Test Code:</dt>
            <dd class="col-sm-9"><pre>@Model.UnitTestCode</pre></dd>

            <dt class="col-sm-3">Created At:</dt>
            <dd class="col-sm-9">@Model.CreatedAt.ToString("g")</dd>

            <dt class="col-sm-3">Type:</dt>
            <dd class="col-sm-9">@Model.Type</dd>
        </dl>

        @if (isAdmin)
        {
            <h3 class="mt-4">Upload File:</h3>
            <form id="uploadForm" class="mb-4">
                <input type="hidden" name="taskId" value="@Model.Id" />
                <div class="input-group">
                    <input type="file" id="fileInput" name="file" class="form-control" required />
                    <button type="submit" class="btn btn-success">Upload</button>
                </div>
                <div class="mt-2">
                    <progress id="progressBar" value="0" max="100" style="width: 100%;"></progress>
                    <span id="progressText">0%</span>
                </div>
            </form>

            <button id="generateLinkBtn" class="btn btn-primary">Генерирай линк</button>
            <input type="text" id="generatedLink" class="form-control mt-2" readonly style="display: none;" />
        }

        @if (Model.FileContent != null && Model.FileContent.Length > 0)
        {
            <h3>Attached File:</h3>
            <a href="@Url.Action("DownloadFile", "Task", new { taskId = Model.Id })" class="btn btn-primary mb-4">Download File</a>
        }
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#uploadForm").submit(function (e) {
                e.preventDefault();

                var fileInput = $("#fileInput")[0];
                if (fileInput.files.length === 0) {
                    alert("Моля, избери файл!");
                    return;
                }

                var file = fileInput.files[0];
                var chunkSize = 1024 * 1024; // 1MB части
                var totalChunks = Math.ceil(file.size / chunkSize);
                var chunkIndex = 0;
                var start = 0;
                var taskId = @Model.Id;

                function uploadChunk() {
                    var end = Math.min(start + chunkSize, file.size);
                    var chunk = file.slice(start, end);
                    var formData = new FormData();
                    formData.append("file", chunk);
                    formData.append("taskId", taskId);
                    formData.append("chunkIndex", chunkIndex);
                    formData.append("totalChunks", totalChunks);
                    formData.append("fileName", file.name);

                    $.ajax({
                        url: "/Task/UploadChunk",
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        xhr: function () {
                            var xhr = new XMLHttpRequest();
                            xhr.upload.addEventListener("progress", function (event) {
                                if (event.lengthComputable) {
                                    var percent = Math.round(((chunkIndex * chunkSize + event.loaded) / file.size) * 100);
                                    $("#progressBar").val(percent);
                                    $("#progressText").text(percent + "%");
                                }
                            }, false);
                            return xhr;
                        },
                        success: function (response) {
                            if (response.success) {
                                chunkIndex++;
                                start += chunkSize;
                                if (chunkIndex < totalChunks) {
                                    uploadChunk(); // Качваме следващата част
                                } else {
                                    alert(response.message);
                                }
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert("Грешка при качването.");
                        }
                    });
                }

                // Стартираме качването
                uploadChunk();
            });

            // Генериране на линк (оставям го непроменено)
            $("#generateLinkBtn").click(function() {
                var taskId = @Model.Id;
                fetch("/Task/GenerateLink", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ taskId: taskId })
                })
                    .then(response => {
                        if (!response.ok) throw new Error("Сървърът върна грешка: " + response.status);
                        return response.json();
                    })
                    .then(data => {
                        if (data.shareableUrl) {
                            $("#generatedLink").val(data.shareableUrl).show();
                        } else {
                            alert("Грешка при генериране на линка!");
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        alert("Грешка при генериране на линка!");
                    });
            });
        });
    </script>
}